diff -Nur vdr-1.3.31.org/device.c vdr-1.3.31/device.c
--- vdr-1.3.31.org/device.c	2005-09-10 18:45:03.000000000 +0200
+++ vdr-1.3.31/device.c	2005-09-10 18:46:20.000000000 +0200
@@ -19,6 +19,8 @@
 #include "status.h"
 #include "transfer.h"
 
+bool scanning_on_receiving_device = false;
+
 // --- cPesAssembler ---------------------------------------------------------
 
 class cPesAssembler {
diff -Nur vdr-1.3.31.org/device.h vdr-1.3.31/device.h
--- vdr-1.3.31.org/device.h	2005-09-10 18:45:03.000000000 +0200
+++ vdr-1.3.31/device.h	2005-09-10 18:46:20.000000000 +0200
@@ -32,6 +32,8 @@
 #define TS_SYNC_BYTE     0x47
 #define PID_MASK_HI      0x1F
 
+extern bool scanning_on_receiving_device;
+
 enum eSetChannelResult { scrOk, scrNotAvailable, scrNoTransfer, scrFailed };
 
 enum ePlayMode { pmNone,           // audio/video from decoder
diff -Nur vdr-1.3.31.org/vdr.c vdr-1.3.31/vdr.c
--- vdr-1.3.31.org/vdr.c	2005-09-10 18:45:03.000000000 +0200
+++ vdr-1.3.31/vdr.c	2005-09-10 18:46:20.000000000 +0200
@@ -568,12 +568,13 @@
            if (time(NULL) - lastTime > MINCHANNELWAIT) {
               cChannel *Channel = Channels.GetByNumber(cDevice::CurrentChannel());
               if (Channel && (Channel->Vpid() || Channel->Apid(0))) {
-                 if (!Channels.SwitchTo(cDevice::CurrentChannel()) // try to switch to the original channel...
+                 if ((!scanning_on_receiving_device)
+                     && !Channels.SwitchTo(cDevice::CurrentChannel()) // try to switch to the original channel...
                      && !(LastTimerChannel > 0 && Channels.SwitchTo(LastTimerChannel)) // ...or the one used by the last timer...
                      && !cDevice::SwitchChannel(1) // ...or the next higher available one...
                      && !cDevice::SwitchChannel(-1)) // ...or the next lower available one
-                    ; 
-                 }   
+                    ;
+                 }
               lastTime = time(NULL); // don't do this too often
               LastTimerChannel = -1;
               }
